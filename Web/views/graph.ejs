<html>

<head>
	<title>graph</title>
	<meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1, maximum-scale=1">
	<link href="/css/style.css" rel="stylesheet" />
	<script src="https://code.jquery.com/jquery-2.1.3.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/cytoscape/3.21.0/cytoscape.min.js"></script>
	<script type="text/javascript">
		$(function () {
			
			let nodeList = [];
			let edgeList = [];
			//console.log(response);
			let data = <%- JSON.stringify(trackSeqs) %>
			
			//document.write(data);
			// for(let trackSeq of data){
			// 	//console.log(trackSeq.request["id.orig_p"]);
			// 	nodeList.push( {data: { id: trackSeq.request["id.orig_p"], type: "Src"}})
			// 	nodeList.push( {data: { id: trackSeq.request["id.resp_p"], type: "Res"}})
			// 	edgeList.push( {data: { source: trackSeq.request["id.orig_p"], target: trackSeq.request["id.resp_p"], uri: trackSeq.request.uri}})
			// 	edgeList.push( {data: { source: trackSeq.request["id.resp_p"], target: trackSeq.request["id.orig_p"], uri: trackSeq.request.status_code}})
			// 	for(let subrequest of trackSeq.subrequest){
			// 		nodeList.push( {data: { id: subrequest["id.orig_p"], type: "Src"}})
			// 		nodeList.push( {data: { id: subrequest["id.resp_p"], type: "Res"}})
			// 		edgeList.push( {data: { source: subrequest["id.orig_p"], target: subrequest["id.resp_p"], uri: subrequest.uri}})
			// 		edgeList.push( {data: { source: subrequest["id.resp_p"], target: subrequest["id.orig_p"], uri: trackSeq.request.status_code}})
			// 	}
			// }

			for(let trackSeq of data){
				//console.log(trackSeq.request["id.orig_p"]);
				nodeList.push( {data: { id: "Client", label: "Client", type: "Src", group: "triangle"}})
				nodeList.push( {data: { id: "BFF", label: "BFF", type: "Res"}})
				if(trackSeq.request.exception){
					edgeList.push( {data: { source: "Client", target: "BFF", uri: trackSeq.request.uri, label: trackSeq.request.method  + " " + trackSeq.request.uri, color: "red"}})
				} else {
					edgeList.push( {data: { source: "Client", target: "BFF", uri: trackSeq.request.uri, label: trackSeq.request.method + " " + trackSeq.request.uri}})
				}
				
				//edgeList.push( {data: { source: "BFF", target: "Client", uri: trackSeq.request.status_code}})
				for(let subrequest of trackSeq.subrequest){
					//nodeList.push( {data: { id: subrequest["id.orig_p"], type: "Src"}})
					nodeList.push( {data: { id: subrequest["id.resp_h"] + " : " + subrequest["id.resp_p"], label: subrequest["id.resp_h"] + " : " + subrequest["id.resp_p"],type: "Res"}})
					if(subrequest.exception){
						edgeList.push( {data: { source: subrequest["id.resp_h"] + " : " + subrequest["id.resp_p"], target: "BFF", uri: subrequest.uri, label: subrequest.method + " " + subrequest.uri, color: "red"}})
					} else {
						edgeList.push( {data: { source: subrequest["id.resp_h"] + " : " + subrequest["id.resp_p"], target: "BFF", uri: subrequest.uri, label: subrequest.method + " " +subrequest.uri}})
					}
					//edgeList.push( {data: { source: "BFF", target: subrequest["id.resp_p"], uri: subrequest.status_code}})
				}
			}
			console.log(nodeList);
			console.log(edgeList);
			let cy = cytoscape({
				container: document.getElementById('cy'),
				style: [
					{
						selector: 'node',
						"style": {
    						"shape": "data(group)",
							"label": "data(id)"
  						},
						css: {
							width: 50,
							height: 50,
							//'background-color': '#61bffc',
							content: 'data(id)'
						}

					},

					{
						selector: "edge",
						style: {
							width: 2,
							"source-arrow-shape": "triangle",
							"target-arrow-shape": "triangle",
							'target-arrow-color': 'data(color)',
							'source-arrow-color': 'data(color)',
							"line-color": "data(color)",
							
							"curve-style": "bezier",
							content: 'data(uri)'
						}
					},
					{
						selector: "edge[label]",
						css: {
							"label": "data(label)",
							"text-rotation": "autorotate",
							"text-margin-x": "0px",
							"text-margin-y": "0px",
							"font-size": "13px",
							}
					}
				],
				elements: {


					nodes: nodeList,
					edges: edgeList
				},
				layout: {
					name: 'grid',
					directed: true,
					padding: 10,
					nodeDimensionsIncludeLabels: true,
					cols: 3,
					rows: 2,
					spacingFactor: 1,
					avoidOverlap: true,
					/* color: "#ffff00",*/
					fit: true
				}
			});
		});

	</script>

</head>

<body>
	<h1>/graph</h1>
	<div id="cy"></div>
	<!-- Load application code at the end to ensure DOM is loaded -->
	<!-- <script type="module" src="/js/index.js">
	</script> -->
</body>

</html>